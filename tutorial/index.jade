.chapter(data-title='Setting Up The Application')
  .step(
    data-title='What Are We Building?',
    data-file='src/main/webapp/home.jsp')
    :markdown
      ## What Are We Building?

      You probably already have landing pages or product detail views in your
      web application, which you're using to generate leads for your business.
      On this tutorial we'll use Twilio SMS to send a message when a new lead
      is found..

      ![Lead Alerts Flow](//s3.amazonaws.com/howtodocs/lead-alerts-flow.png)

      In this example we'll be implementing instant lead alerts for real estate
      (much like [our awesome friends at
      Trulia](//www.twilio.com/customers/stories/trulia)). We'll create a
      landing page for a new house on the market, and notify a real estate agent
      the moment a potential customer requests information.

      Let's see how it works! Click the next arrow above to continue the tutorial.

  .step(
    data-title='Landing Page Data',
    data-file='src/main/java/com/twilio/leadalerts/HomeServlet.java')
    :markdown
      ## Landing Page Data

      To display a landing page for our house, we need some data about
      the fictional house we've put on the market. For demonstration purposes,
      we've hard-coded the information we need.

      ---

      **See Also:**
      * [What is a Java Servlet?](//docs.oracle.com/javaee/6/tutorial/doc/bnafe.html)

  .step(data-title='Rendering the Landing Page',
    data-file='src/main/webapp/home.jsp')
    :markdown
      ## Rendering the Landing Page

      In our landing page, we'll insert data about the house. We'll use a sidebar to include
      a form for the user to enter in their contact information.
      That way, they can request more info about the home.

      ---

      **See Also:**
      * [JSP Standard Tag Library](//jstl.java.net/)

  .step(
    data-title='Creating a Twilio API Client',
    data-file='src/main/java/com/twilio/leadalerts/lib/MessageSender.java',
    data-highlight='14-42')
    :markdown
      ## Creating a Twilio REST API Client

      Here we create a helper class with an authenticated [Twilio REST
      API](https://twilio.github.io/twilio-java/com/twilio/sdk/TwilioRestClient.html) client that we can use anytime we need to send a text message. We initialize it with our [Twilio Account Credentials](//www.twilio.com/user/account/messaging/dashboard) that are stored as environment variables.

      ---

      **See Also:**
      * [Twilio SMS and MMS Quickstart](//www.twilio.com/docs/quickstart/java/sms/sending-via-rest)

  .step(
    data-title='Handling the POST Request',
    data-file='src/main/java/com/twilio/leadalerts/NotificationsServlet.java',
    data-highlight='25-42,14')
    :markdown
      ## Handling the POST Request

      This code handles the HTTP `POST` request issued by our landing page. It
      uses our `MessageSender` class to send a SMS message to the real estate
      agent's phone number, which is also set as a environment variable. We include the lead's name, phone number, and inquiry directly into the body of
      the text message we send to the agent.

      Now the agent has all the information they need to immediately follow up on the lead.

      ---

      **See Also:**
      * [HttpServlet](//docs.oracle.com/javaee/5/api/javax/servlet/http/HttpServlet.html)

  .step
    :markdown
      ## Where to next?

      That's it! We've just implemented an application to instantly route leads to sales people using text messages. If you're a
      Java developer working with Twilio, you might want to check out these other tutorials.

      [**Click-To-Call**](//www.twilio.com/docs/tutorials/walkthrough/click-to-call/java/servlets)

      Click-to-call enables your company to convert web traffic into phone calls
      with the click of a button.

      [**IVR: Phone Tree**](//www.twilio.com/docs/tutorials/walkthrough/ivr-phone-tree/java/servlets)

      Easily route callers to the right people and information with an IVR
      (interactive voice response) system.

      ### Did this help?

      Thanks for checking out this tutorial! If you have any feedback
      to share with us, we'd love to hear it.
      [Contact the Twilio Developer Education Team](mailto:deved-oss@twilio.com) to let us know what you think.
